
# this can be any application server, not just unicorn
upstream unicorn_makeabox {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response (in case the unicorn master nukes a
    # single worker for timing out).

    # for UNIX domain socket setups:
    # server unix:/path/to/.unicorn.sock fail_timeout=0;

    # for TCP setups, point these to your backend servers
    server 127.0.0.1:8899 fail_timeout=0;
}

server {
    listen 80;
    server_name makeabox.io;
    rewrite ^/(.*) https://makeabox.io/$1 permanent;
    access_log /var/log/nginx/makeabox.io_ssl_redirect.log;
}

server {
    listen 443;
    server_name makeabox.io;

    include /opt/local/etc/nginx/includes/ssl.conf;

    ssl_certificate                         /opt/local/etc/nginx/ssl/makeabox.io.crt;
    ssl_certificate_key                     /opt/local/etc/nginx/ssl/makeabox.io.key;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Request-Start "t=${msec}";

    access_log /var/log/nginx/makeabox_access.log apm;

    client_max_body_size 50M;

    root /home/kig/workspace/apps/makeabox/current/public;

    try_files $uri/index.html $uri.html $uri @app;

    location @app {

        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 210s;
        proxy_buffer_size 32k;
        proxy_busy_buffers_size 16M;
        proxy_buffers 1024 32k;
        proxy_intercept_errors on;

        proxy_max_temp_file_size 100M;
        proxy_temp_file_write_size 1024k;


        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Request-Start "t=${msec}";

        proxy_pass http://unicorn_makeabox;
        proxy_redirect off;
    }


    # Rails error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /home/kig/workspace/apps/makeabox/current/public;
    }

}

