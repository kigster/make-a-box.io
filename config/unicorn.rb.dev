# config/unicorn.rb
worker_processes 1
timeout 15
preload_app false
listen "*:3000", :tcp_nopush => true, :backlog => 64
app_shared_root = File.expand_path('../../', __FILE__)

pid "#{app_shared_root}/tmp/pids/unicorn.pid"
stderr_path "#{app_shared_root}/log/unicorn.stderr.log"
stdout_path "#{app_shared_root}/log/unicorn.stdout.log"

before_fork do |server, worker|
  Signal.trap 'TERM' do
    puts 'Unicorn master intercepting TERM and sending myself QUIT instead'
    Process.kill 'QUIT', Process.pid
  end

  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.connection.disconnect!
end

after_fork do |server, worker|
  logger Logger.new($stdout)
  Signal.trap 'TERM' do
    puts 'Unicorn worker intercepting TERM and doing nothing. Wait for master to send QUIT'
  end

  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection
end
