set :default_env, { PATH:            "#{fetch(:ruby_bin_dir)}:/opt/local/bin:$PATH",
                    MAKE_OPTS:       '-j48',
                    LD_LIBRARY_PATH: '/opt/local/lib',
                    LDFLAGS:         '-L/opt/local/lib -R/opt/local/lib',
                    CFLAGS:          '-I/opt/local/include'
}

set :packages, %w(
   git
   gcc49
   gmake
   libiconv
   libxml2
   libxslt
   openssl
   watch
   zlib
   tar
   nodejs
 )

set :bundle_exec, 'source ~/.bashrc; bundle exec'
SSHKit.config.command_map[:tar]    = 'gtar'
SSHKit.config.command_map[:bundle] = 'source ~/.bashrc; bundle'

namespace :bundler do
  task :map_bins do
    fetch(:bundle_bins).each do |command|
      SSHKit.config.command_map.prefix[command.to_sym].delete('bundle exec')
      SSHKit.config.command_map.prefix[command.to_sym].push(fetch(:bundle_exec))
    end
  end
end

namespace :sunos do
  SSHKit.config.command_map[:rake] = 'source ~/.bashrc; bundle exec rake '
  desc ' Install SmartOS package dependencies '
  task :packages do
    on roles(:app) do |role_host|
      host = SSHKit::Host.new("root@#{role_host}")
      on host do
        execute "pkgin -y in #{fetch(:packages).join(' ')}; true"
      end
    end
  end

  task init: %w(packages)

  namespace :unicorn do
    desc 'Install Unicorn init script'
    task :init do
      on roles(:app) do |role_host|
        host = SSHKit::Host.new("root@#{role_host}")
        on host do
          # execute "ln -nfs #{current_path}/exe/unicorn-init /etc/rc2.d/S98unicorn"
          # execute "ln -nfs #{current_path}/exe/unicorn-init /etc/rc2.d/K01unicorn"
        end
      end
    end
  end
end


